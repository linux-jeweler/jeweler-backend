generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x", "darwin-arm64"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model LinuxDistro {
  id            String              @id @default(uuid())
  name          String
  version       String

  packageSources    PackageSource[]
  softwareOnSources SoftwareOnSource[]
  users             User[]

  @@unique([name, version])
}

model PackageSource {
  id            String              @id @default(uuid())
  name          String              @unique
  image         String?
  info          String?
  description   String?
  url           String?
  trustedStatus Boolean

  distros           LinuxDistro[]
  software          Software[]
  softwareOnSources SoftwareOnSource[]
}

model Software {
  id            String              @id @default(uuid())
  name          String
  version       String
  dependencies  String[]
  description   String?
  lastModified  DateTime            
  lastRequested DateTime            @updatedAt        
  license       String[]
  url           String?

  packageSources    PackageSource[]
  softwareOnSources SoftwareOnSource[]
  users             User[] 
}

model SoftwareOnSource {
  software      Software         @relation(fields: [softwareId], references: [id])
  softwareId    String
  source        PackageSource    @relation(fields: [sourceId], references: [id])
  sourceId      String
  distro        LinuxDistro      @relation(fields: [distroId], references: [id])
  distroId      String

  installCommand String?
  instructions  String?
  downloadLink  String?

  @@id([softwareId, sourceId, distroId])
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  likedPackages Software[]
  usedDistros   LinuxDistro[]
}