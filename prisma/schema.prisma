  generator client {
    provider      = "prisma-client-js"
    binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x", "darwin-arm64"]
    previewFeatures = ["fullTextSearch","postgresqlExtensions"]
  }

  datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
    extensions = [pg_trgm]
  }

  model LinuxDistro {
    id                String             @id @default(uuid())
    name              String             @unique
    version           String

    packageSources    PackageSource[]    @relation("LinuxDistroToPackageSource")
    users             User[]             @relation("LinuxDistroToUser")

    @@unique([name, version])
  }

  model PackageSource {
    id                String             @id @default(uuid())
    name              String             @unique
    image             String?
    info              String?
    description       String?
    url               String?
    trustedStatus     Boolean

    createdAt         DateTime           @default(now())
    updatedAt         DateTime           @updatedAt

    softwareOnSources SoftwareOnSource[]
    distros           LinuxDistro[]      @relation("LinuxDistroToPackageSource")
    software          Software[]         @relation("PackageSourceToSoftware")
  }

  model Software {
    id                String             @id @default(uuid())
    name              String             @unique
    version           String
    description       String?
    dependencies      String[]
    lastModified      DateTime
    url               String?
    license           String[]
    

    createdAt         DateTime           @default(now())
    updatedAt         DateTime           @updatedAt

    softwareOnSources SoftwareOnSource[]
    packageSources    PackageSource[]    @relation("PackageSourceToSoftware")
    users             User[]             @relation("SoftwareToUser")

    @@unique([name, version])
  }

  model SoftwareOnSource {
    softwareName     String
    sourceName       String
    installCommand String?
    instructions   String?
    downloadLink   String?

    software       Software      @relation(fields: [softwareName], references: [name])
    source         PackageSource @relation(fields: [sourceName], references: [name])

    createdAt      DateTime      @default(now())
    updatedAt      DateTime      @updatedAt

    @@id([softwareName, sourceName], name: "SoftwareOnSourceId")
  }

  model User {
    id            String        @id @default(uuid())
    email         String        @unique
    password      String

    createdAt     DateTime      @default(now())
    updatedAt     DateTime      @updatedAt

    usedDistros   LinuxDistro[] @relation("LinuxDistroToUser")
    likedPackages Software[]    @relation("SoftwareToUser")
  }

